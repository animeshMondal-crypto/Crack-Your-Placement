#intution
convert the problem to two sum that's it....

//solution
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        vector<vector<int>> ans;

        for(int i = 0; i<n-2; i++){
            // remove duplicate targets
            if(i>0 && nums[i] == nums[i-1]) continue;

            int target = 0-nums[i];
            int lo = i+1, hi = n-1;
            while(lo<hi){
                if(nums[lo]+nums[hi]==target){
                    ans.push_back({nums[lo], nums[hi], -target});
                    lo++;
                    hi--;

                    //remove duplicate items
                    while(lo<hi && nums[lo]==nums[lo-1]) lo++;
                    while(lo<hi && nums[hi]==nums[hi+1]) hi--;
                }
                else if(nums[lo]+nums[hi] < target)
                    lo++;
                else 
                    hi--;
            }
        }

        return ans;
    }
};