#intution
use dp

//solution
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n = nums.size();
        vector<bool> dp(n+1, false);

        for(int i = n-1; i>=0; i--){
            if(i == n-1){
                dp[n-1] = true;
                continue;
            }
            for(int j = 1; j<=nums[i]; j++){
                if(i+j<=n && dp[i+j] == true){
                    dp[i] = true;
                    break;
                }
            }
        } 
        return dp[0];
    }
};